version: '3'

services:
  # #  start Redis, and ensure that data is stored to a mounted volume
  # redis:
  #   image: 'redis:alpine'
  #   ports:
  #     - "6379:6379"
  #   restart: always
  #   volumes:
  #     - ../db-data/redis/:/data

  #  start Postgres, and ensure that data is stored to a mounted volume
  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cycir
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  # #  start mailhog
  # mailhog:
  #   image: 'mailhog/mailhog:latest'
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"

  # ipe:
  #   build:
  #     context: ./../ipe
  #     dockerfile: ./ipe.dockerfile
  #   restart: always
  #   ports:
  #     - "4001:4001"
  #   deploy:
  #     mode: replicated

  backend-service:
    build:
      context: ./../cmd/api
      dockerfile: ./backend-service.dockerfile
    restart: always
    ports:
      - "4002:4002"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DB_DSN: "host=localhost port=5432 user=postgres password=password dbname=cycir sslmode=disable timezone=UTC connect_timeout=5"
      ES_ADDRESS: "http://localhost:9200"
      ES_USERNAME: "elastic"
      ES_PASSWORD: "jHt1swMPzkAHttVEJ3si"
      ES_INDEX: "cycir"
      PUSHER_HOST: "localhost"
      PUSHER_PORT: "4001"
      PUSHER_SECRET: "123abc"
      PUSHER_KEY: "abc123"
      PUSHER_SECURE: "disable"
      PUSHER_APP: "1"
      IN_PRODUCTION: "disable"
      DOMAIN: "localhost"

  #   build:
  #     context: ./../cmd/api
  #     dockerfile: ./../api/frontend-service.dockerfile
  #   restart: always
  #   ports:
  #     - "8080:80"
  #   deploy:
  #     mode: replicated

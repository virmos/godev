{{extends "./layouts/layout.jet"}}

{{block css()}}
    <style>

    </style>
{{end}}


{{block cardTitle()}}
    Hosts
{{end}}


{{block cardContent()}}
<div class="row">
    <div class="col">
        <ol class="breadcrumb mt-1">
            <li class="breadcrumb-item"><a href="/admin/overview">Overview</a></li>
            <li class="breadcrumb-item active">Hosts</li>
        </ol>
        <h4 class="mt-4">Hosts</h4>
        <hr>
    </div>
</div>

<div class="row">
    <div class="col">

        <div class="float-right">
            <a class="btn btn-outline-secondary" href="/admin/host/0#host">New Host</a>
        </div>
        <div class="clearfix"></div>

        <table class="table table-condensed table-striped">
            <thead>
            <tr>
                <th>Host</th>
                <th>Services</th>
                <th>OS</th>
                <th>Location</th>
                <th>Status</th>
                <th>Uptime</th>
            </tr>
            </thead>
            <tbody>
            {{range hosts}}
                <tr>
                    <td><a href="/admin/host/{{.ID}}">{{.HostName}}</a></td>
                    <td>
                        {{range .HostServices}}
                        <span class="badge bg-info">{{.Service.ServiceName}}</span>
                        {{end}}
                    </td>
                    <td>{{.OS}}</td>
                    <td>{{.Location}}</td>
                    <td>
                        {{if .Active == 1}}
                            <span class="badge bg-success">Active</span>
                        {{else}}
                            <span class="badge bg-danger">Inactive</span>
                        {{end}}
                    </td>
                    <td> 
                        <a> <span 
                        id="check-availability-button" class="badge bg-warning"
                        data-host-name="{{.HostName}}"
                            >Send
                        </span></a>
                    </td>
                </tr>
            {{end}}

            </tbody>
        </table>
    </div>
</div>

{{end}}

{{block js()}}
<script>
    document.getElementById("check-availability-button").addEventListener("click", function () {
        let html = `
        <form id="check-availability-form" action="" method="post" novalidate class="needs-validation">
            <div class="form-row">
                <div class="col">
                    <div class="form-row" id="reservation-dates-modal">
                        <div class="col">
                            <input disabled required class="form-control" type="text" name="start" id="start" placeholder="Arrival">
                        </div>
                        <div class="col">
                            <input disabled required class="form-control" type="text" name="end" id="end" placeholder="Departure">
                        </div>
                    </div>
                </div>
            </div>
        </form>
        `
        let currentElement = this

        attention.custom({
            msg: html,
            title: "Choose your dates",

            willOpen: function () {
                const elem = document.getElementById('reservation-dates-modal');
                const rp = new DateRangePicker(elem, {
                    format: 'yyyy-mm-dd',
                    showOnFocus: true,
                    minDate: new Date(),
                })
            },

            didOpen: function () {
                document.getElementById('start').removeAttribute('disabled');
                document.getElementById('end').removeAttribute('disabled');

            },

            callback: function (result) {
                let formData = new FormData();
                formData.append("key", currentElement.getAttribute("data-host-name"));
                formData.append("csrf_token", "{{.CSRFToken}}");

                fetch('/admin/get-from-cache', {
                    method: 'POST',
                    body: formData,
                })
                .then(response => response.json())
                .then(data => {
                    if (data.error === true) {
                        let form = document.getElementById("check-availability-form");
                
                        let payload = {
                            start_date: document.getElementById("start").value,
                            end_date: document.getElementById("end").value,
                            host_name : currentElement.getAttribute("data-host-name"),
                            csrf_token: `{{.CSRFToken}}`,
                        }

                        const requestOptions = {
                            method: 'post',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json',
                                'Authorization': `Bearer {{.Token}}`,
                            },
                            body: JSON.stringify(payload),
                        }

                        fetch("{{.PreferenceMap["API"]}}/api/admin/send-range-uptime-report", requestOptions)
                        .then(response => response.json())
                        .then(data => {
                            if (data.error === false) {
                                successAlert(data.message);
                                saveReportToCache(data.host_name, data.histogram, data.count)
                            } else {
                                errorAlert(data.message);
                            }
                        })
                    }
                })
            }
        });
    })

    function saveReportToCache(key, histogram, count) {                
        let formData = new FormData();
        formData.append("key", key);
        formData.append("value", histogram + "|" + count);
        formData.append("csrf_token", "{{.CSRFToken}}");

        fetch("/admin/save-in-cache", {
            method: 'post',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            console.log(data)
        })
    }
</script>
{{end}}